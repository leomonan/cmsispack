#pragma once

#ifndef MIDDLEWARES_QEEXO_INCLUDE_APPS_QXAUTOMLCONFIG_USER_H_
#define MIDDLEWARES_QEEXO_INCLUDE_APPS_QXAUTOMLCONFIG_USER_H_

/************************************************
 * SENSOR ENABLE DEFINITIONS
 ************************************************/
 #define QXAUTOMLCONFIG_SENSOR_ENABLE_ACCEL
 #define QXAUTOMLCONFIG_SENSOR_ENABLE_GYRO
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_MAG
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_PRESSURE
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_PROXIMITY
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_AMBIENT
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_HUMIDITY
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_TEMPERATURE
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_TEMPERATURE_EXT1
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_ACCEL_LOWPOWER
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_ACCEL_HIGHSENSITIVE
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_MICROPHONE
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_MICROPHONE_ANALOG
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_LIGHT
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_TVOC
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_ECO2
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_ETOH
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_RCDA
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_IAQ
// #define QXAUTOMLCONFIG_SENSOR_ENABLE_RMOX

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_ACCEL
#define QXAUTOMLCONFIG_SENSOR_ACCEL_FSR  8.0f
#define QXAUTOMLCONFIG_SENSOR_ACCEL_ODR  3333.0f
#define QXAUTOMLCONFIG_SENSOR_ACCEL_BUFCOUNT  1800
#define QXAUTOMLCONFIG_SENSOR_ACCEL_BYTES_PER_SAMPLE  6
// #define COMBINE_ACCEL_AXES
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_GYRO
#define QXAUTOMLCONFIG_SENSOR_GYRO_FSR  1000.0f
#define QXAUTOMLCONFIG_SENSOR_GYRO_ODR  3330.0f
#define QXAUTOMLCONFIG_SENSOR_GYRO_BUFCOUNT  1800
#define QXAUTOMLCONFIG_SENSOR_GYRO_BYTES_PER_SAMPLE  6
// #define COMBINE_GYRO_AXES
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_MAG
#define QXAUTOMLCONFIG_SENSOR_MAG_FSR  50.0f //50gauss
#define QXAUTOMLCONFIG_SENSOR_MAG_ODR  100.0f //100hz
#define QXAUTOMLCONFIG_SENSOR_MAG_BUFCOUNT  30
#define QXAUTOMLCONFIG_SENSOR_MAG_BYTES_PER_SAMPLE  6
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_ACCEL_LOWPOWER
#define QXAUTOMLCONFIG_SENSOR_ACCEL_LOWPOWER_FSR  0.0f
#define QXAUTOMLCONFIG_SENSOR_ACCEL_LOWPOWER_ODR  0.0f
#define QXAUTOMLCONFIG_SENSOR_ACCEL_LOWPOWER_BUFCOUNT  30
#define QXAUTOMLCONFIG_SENSOR_ACCEL_LOWPOWER_BYTES_PER_SAMPLE  6
// #define COMBINE_ACCEL_LOWPOWER_AXES
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_ACCEL_HIGHSENSITIVE
#define QXAUTOMLCONFIG_SENSOR_ACCEL_HIGHSENSITIVE_FSR  0.0f
#define QXAUTOMLCONFIG_SENSOR_ACCEL_HIGHSENSITIVE_ODR  26667.0f //26667Hz
#define QXAUTOMLCONFIG_SENSOR_ACCEL_HIGHSENSITIVE_BUFCOUNT  7200
#define QXAUTOMLCONFIG_SENSOR_ACCEL_HIGHSENSITIVE_BYTES_PER_SAMPLE  6
// #define COMBINE_ACCEL_HIGHSENSITIVE_AXES

#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_PRESSURE
#define QXAUTOMLCONFIG_SENSOR_PRESSURE_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_PRESSURE_ODR  0.0
#define QXAUTOMLCONFIG_SENSOR_PRESSURE_BUFCOUNT  30
#define QXAUTOMLCONFIG_SENSOR_PRESSURE_BYTES_PER_SAMPLE  4
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_PROXIMITY
#define QXAUTOMLCONFIG_SENSOR_PROXIMITY_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_PROXIMITY_ODR  100.0f //100hz
#define QXAUTOMLCONFIG_SENSOR_PROXIMITY_BUFCOUNT  30
#define QXAUTOMLCONFIG_SENSOR_PROXIMITY_BYTES_PER_SAMPLE  1
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_AMBIENT
#define QXAUTOMLCONFIG_SENSOR_AMBIENT_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_AMBIENT_ODR  100.0f //100hz
#define QXAUTOMLCONFIG_SENSOR_AMBIENT_BUFCOUNT  30
#define QXAUTOMLCONFIG_SENSOR_AMBIENT_BYTES_PER_SAMPLE  8
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_LIGHT
#define QXAUTOMLCONFIG_SENSOR_LIGHT_FSR  0.0f
#define QXAUTOMLCONFIG_SENSOR_LIGHT_ODR  10.0f //10hz
#define QXAUTOMLCONFIG_SENSOR_LIGHT_BUFCOUNT  30
#define QXAUTOMLCONFIG_SENSOR_LIGHT_BYTES_PER_SAMPLE  2
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_HUMIDITY
#define QXAUTOMLCONFIG_SENSOR_HUMIDITY_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_HUMIDITY_ODR  0.0
#define QXAUTOMLCONFIG_SENSOR_HUMIDITY_BUFCOUNT  10
#define QXAUTOMLCONFIG_SENSOR_HUMIDITY_BYTES_PER_SAMPLE  2
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_TEMPERATURE
#define QXAUTOMLCONFIG_SENSOR_TEMPERATURE_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_TEMPERATURE_ODR  0.0
#define QXAUTOMLCONFIG_SENSOR_TEMPERATURE_BUFCOUNT  30
#define QXAUTOMLCONFIG_SENSOR_TEMPERATURE_BYTES_PER_SAMPLE  2
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_TEMPERATURE_EXT1
#define QXAUTOMLCONFIG_SENSOR_TEMPERATURE_EXT1_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_TEMPERATURE_EXT1_ODR  100.0f //100Hz
#define QXAUTOMLCONFIG_SENSOR_TEMPERATURE_EXT1_BUFCOUNT  30
#define QXAUTOMLCONFIG_SENSOR_TEMPERATURE_EXT1_BYTES_PER_SAMPLE  2
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_MICROPHONE
#define QXAUTOMLCONFIG_SENSOR_MICROPHONE_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_MICROPHONE_ODR  16000.0f //16kHz
#define QXAUTOMLCONFIG_SENSOR_MICROPHONE_BUFCOUNT  800
#define QXAUTOMLCONFIG_SENSOR_MICROPHONE_BYTES_PER_SAMPLE  2
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_TVOC
#define QXAUTOMLCONFIG_SENSOR_TVOC_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_TVOC_ODR  0.5f
#define QXAUTOMLCONFIG_SENSOR_TVOC_BUFCOUNT  10
#define QXAUTOMLCONFIG_SENSOR_TVOC_BYTES_PER_SAMPLE  2
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_ECO2
#define QXAUTOMLCONFIG_SENSOR_ECO2_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_ECO2_ODR  0.5f
#define QXAUTOMLCONFIG_SENSOR_ECO2_BUFCOUNT  10
#define QXAUTOMLCONFIG_SENSOR_ECO2_BYTES_PER_SAMPLE  4
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_ETOH
#define QXAUTOMLCONFIG_SENSOR_ETOH_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_ETOH_ODR  0.5f
#define QXAUTOMLCONFIG_SENSOR_ETOH_BUFCOUNT  10
#define QXAUTOMLCONFIG_SENSOR_ETOH_BYTES_PER_SAMPLE  2
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_RCDA
#define QXAUTOMLCONFIG_SENSOR_RCDA_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_RCDA_ODR  0.5f
#define QXAUTOMLCONFIG_SENSOR_RCDA_BUFCOUNT  10
#define QXAUTOMLCONFIG_SENSOR_RCDA_BYTES_PER_SAMPLE  2
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_IAQ
#define QXAUTOMLCONFIG_SENSOR_IAQ_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_IAQ_ODR  0.5f
#define QXAUTOMLCONFIG_SENSOR_IAQ_BUFCOUNT  10
#define QXAUTOMLCONFIG_SENSOR_IAQ_BYTES_PER_SAMPLE  2
#endif

#ifdef QXAUTOMLCONFIG_SENSOR_ENABLE_RMOX
#define QXAUTOMLCONFIG_SENSOR_RMOX_FSR  0.0f //default
#define QXAUTOMLCONFIG_SENSOR_RMOX_ODR  0.5f
#define QXAUTOMLCONFIG_SENSOR_RMOX_BUFCOUNT  10
#define QXAUTOMLCONFIG_SENSOR_RMOX_BYTES_PER_SAMPLE  52 /* 13 channels * 4 bytes per uint32_t */
#endif

/* sensor type definitions inside inference Engine. 
 * Customer should define the sensor index as the same sequence regarding to 
 * fill the prediction data buffer with multiple sensors*/
typedef enum {
  SENSOR_TYPE_NONE = 0, /*!< None defined sensor */
  SENSOR_TYPE_ACCEL, /*!< Default accelerometer sensor */
  SENSOR_TYPE_GYRO, /*!< Default gyroscope sensor */
  SENSOR_TYPE_MAG, /*!< Megnotometer sensor */
  SENSOR_TYPE_PRESSURE, /*!< Pressure sensor */
  SENSOR_TYPE_TEMPERATURE, /*!< Temperature sensor */
  SENSOR_TYPE_HUMIDITY, /*!< Humidity sensor */
  SENSOR_TYPE_MICROPHONE, /*!< Microphone sensor */
  
  SENSOR_TYPE_ACCEL_LOWPOWER, /*!< Additional lowpower accelometer sensor */
  SENSOR_TYPE_ACCEL_HIGHSENSITIVE, /*!< Additional high sensitive accelometer sensor */
  SENSOR_TYPE_TEMPERATURE_EXT1, /*!< Additional temperature sensor */
  SENSOR_TYPE_PROXIMITY, /*!< Proximity sensor */
  SENSOR_TYPE_AMBIENT, /*!< Ambient light sensor */
  SENSOR_TYPE_LIGHT,  /*!<Light sensor with one axis>*/

  SENSOR_TYPE_TVOC, /*!< ZMOD gas sensor (TVOC) */
  SENSOR_TYPE_ECO2, /*!< ZMOD gas sensor (ECO2) */
  SENSOR_TYPE_ETOH, /*!< ZMOD gas sensor (ETOH) */
  SENSOR_TYPE_RCDA, /*!< ZMOD gas sensor (RCDA) */
  SENSOR_TYPE_IAQ, /*!< ZMOD gas sensor (IAQ) */
  SENSOR_TYPE_RMOX, /*!< ZMOD gas sensor (MOx array) */
  SENSOR_TYPE_MAX
}QXOSensorType;

typedef struct{
  QXOSensorType type;
  float fsr;
  float odr;
  int buf_count;
  int sample_bytes;
  char * buf;
}tQxAutoMLSensor;

/* Qeexo static engine APIs */
extern void QxFillSensorData(QXOSensorType type, void* data, int data_len);
extern int QxClassify(void);

extern tQxAutoMLSensor enabled_sensors[]; 
extern int enabled_sensors_count;

/* Desired period of time between the start of the previous classification and the next request for classification (in msecs) */
#define PRED_CLASSIFICATION_INTERVAL_IN_MSECS 100

#endif /* MIDDLEWARES_QEEXO_INCLUDE_APPS_QXAUTOMLCONFIG_USER_H_ */
